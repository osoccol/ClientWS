
package proxy;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "BanqueServiceService", targetNamespace = "http://ws/", wsdlLocation = "http://localhost:8084/?wsdl")
public class BanqueServiceService
    extends Service
{

    private final static URL BANQUESERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException BANQUESERVICESERVICE_EXCEPTION;
    private final static QName BANQUESERVICESERVICE_QNAME = new QName("http://ws/", "BanqueServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8084/?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BANQUESERVICESERVICE_WSDL_LOCATION = url;
        BANQUESERVICESERVICE_EXCEPTION = e;
    }

    public BanqueServiceService() {
        super(__getWsdlLocation(), BANQUESERVICESERVICE_QNAME);
    }

    public BanqueServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), BANQUESERVICESERVICE_QNAME, features);
    }

    public BanqueServiceService(URL wsdlLocation) {
        super(wsdlLocation, BANQUESERVICESERVICE_QNAME);
    }

    public BanqueServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BANQUESERVICESERVICE_QNAME, features);
    }

    public BanqueServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BanqueServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Banque
     */
    @WebEndpoint(name = "banquePort")
    public Banque getBanquePort() {
        return super.getPort(new QName("http://ws/", "banquePort"), Banque.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Banque
     */
    @WebEndpoint(name = "banquePort")
    public Banque getBanquePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws/", "banquePort"), Banque.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BANQUESERVICESERVICE_EXCEPTION!= null) {
            throw BANQUESERVICESERVICE_EXCEPTION;
        }
        return BANQUESERVICESERVICE_WSDL_LOCATION;
    }

}
